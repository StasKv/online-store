import { getProducts } from '../index';
import { IProduct } from '../index';

export const createStockFilter = async () => {
  const filters = document.querySelector('.filters') as HTMLElement;
  const stockFilter = document.createElement('div');
  const stockFilterHeader = document.createElement('h2');
  const stockSlider = document.createElement('div');
  const stockInputLeft = document.createElement('input');
  const stockInputRight = document.createElement('input');
  const stockTrack = document.createElement('div');
  const stockPointLeft = document.createElement('div');
  const stockPointRight = document.createElement('div');
  const stockValueContainer = document.createElement('div');
  const stockInputMinValue = document.createElement('div');
  const stockInputMaxValue = document.createElement('div');
  stockFilterHeader.classList.add('stock-header');
  stockValueContainer.classList.add('input-stock-value-container');
  stockInputLeft.classList.add('input-range', 'input-stock-left');
  stockInputRight.classList.add('input-range', 'input-stock-right');
  stockInputMinValue.classList.add('input-stock-value-min');
  stockInputMaxValue.classList.add('input-stock-value-max');
  stockSlider.classList.add('stock-slider');
  stockTrack.classList.add('stock-track');
  stockPointLeft.classList.add('point', 'point-stock-left');
  stockPointRight.classList.add('point', 'point-stock-right');
  stockFilterHeader.textContent = 'Stock'
  filters.append(stockFilter);
  stockFilter.append(stockFilterHeader);
  stockFilter.append(stockValueContainer);
  stockValueContainer.append(stockInputMinValue);
  stockValueContainer.append(stockInputMaxValue);
  stockFilter.append(stockInputLeft);
  stockFilter.append(stockInputRight);
  stockFilter.append(stockSlider);
  stockSlider.append(stockTrack);
  stockSlider.append(stockPointLeft);
  stockSlider.append(stockPointRight);
  const arrayOfProd: Array<IProduct> = await getProducts();
  const arrayOfStocks: Array<number> = arrayOfProd.map((item) => item.stock);
  const minStock = Math.min(...arrayOfStocks);
  const maxStock = Math.max(...arrayOfStocks);
  stockFilter.classList.add('filter-stock');
  stockInputLeft.type = 'range';
  stockInputLeft.step = `1`;
  stockInputLeft.min = `${minStock}`;
  stockInputLeft.max = `${maxStock}`;
  stockInputLeft.value = `${minStock}`;
  stockInputRight.type = 'range';
  stockInputRight.min = `${minStock}`;
  stockInputRight.max = `${maxStock}`;
  stockInputRight.value = `${maxStock}`;
  stockInputMinValue.textContent = stockInputLeft.value;
  stockInputMaxValue.textContent = stockInputRight.value;
};

export const setStockRangeValues = (): void => {
  const stockInputLeft = document.querySelector('.input-stock-left') as HTMLInputElement;
  const stockInputRight = document.querySelector('.input-stock-right') as HTMLInputElement;
  const stockInputMinValue = document.querySelector('.input-stock-value-min') as HTMLElement;
  const stockInputMaxValue = document.querySelector('.input-stock-value-max') as HTMLElement;
  const stockPointLeft = document.querySelector('.point-stock-left') as HTMLElement;
  const stockPointRight = document.querySelector('.point-stock-right') as HTMLElement;
  const elemStockCollection = document.getElementsByClassName('product-stock') as HTMLCollectionOf<HTMLElement>;
  const stockArr: Array<HTMLElement> = Array.from(elemStockCollection);
  const arrayOfStocks: Array<number> = stockArr.map((item) => parseInt(item.id));
  const minStock = Math.min(...arrayOfStocks);
  const maxStock = Math.max(...arrayOfStocks);
  console.log(arrayOfStocks);
  let min = parseInt(stockInputLeft.min);
  let max = parseInt(stockInputLeft.max);
  stockInputLeft.value = `${minStock}`;
  stockInputRight.value = `${maxStock}`;
  stockInputMinValue.textContent = `${stockInputLeft.value}`;
  stockInputMaxValue.textContent = `${stockInputRight.value}`;
  stockInputLeft.value = `${Math.min(parseInt(stockInputLeft.value), parseInt(stockInputRight.value) - 1)}`;
  let percentLeft = ((parseInt(stockInputLeft.value) - min) / (max - min)) * 100;
  stockPointLeft.style.left = `${percentLeft}%`;
  stockInputRight.value = `${Math.max(parseInt(stockInputRight.value), parseInt(stockInputLeft.value) + 1)}`;
  let percentRight = ((parseInt(stockInputRight.value) - min) / (max - min)) * 100;
  stockPointRight.style.right = `${100 - percentRight}%`;
}
