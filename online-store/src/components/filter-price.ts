import { getProducts } from '../index';
import { IProduct } from '../index';

export const createPriceFilter = async () => {
  const filters = document.querySelector('.filters') as HTMLElement;
  const priceFilter = document.createElement('div');
  const priceFilterHeader = document.createElement('h2');
  const priceSlider = document.createElement('div');
  const priceInputLeft = document.createElement('input');
  const priceInputRight = document.createElement('input');
  const priceTrack = document.createElement('div');
  const pricePointLeft = document.createElement('div');
  const pricePointRight = document.createElement('div');
  const priceValueContainer = document.createElement('div');
  const priceInputMinValue = document.createElement('div');
  const priceInputMaxValue = document.createElement('div');
  priceFilterHeader.classList.add('price-header');
  priceValueContainer.classList.add('input-price-value-container');
  priceInputLeft.classList.add('input-range', 'input-price-left');
  priceInputRight.classList.add('input-range', 'input-price-right');
  priceInputMinValue.classList.add('input-value-min');
  priceInputMaxValue.classList.add('input-value-max');
  priceSlider.classList.add('price-slider');
  priceTrack.classList.add('price-track');
  pricePointLeft.classList.add('point', 'point-left');
  pricePointRight.classList.add('point', 'point-right');
  priceFilterHeader.textContent = 'Price';
  filters.append(priceFilter);
  priceFilter.append(priceFilterHeader);
  priceFilter.append(priceValueContainer);
  priceValueContainer.append(priceInputMinValue);
  priceValueContainer.append(priceInputMaxValue);
  priceFilter.append(priceInputLeft);
  priceFilter.append(priceInputRight);
  priceFilter.append(priceSlider);
  priceSlider.append(priceTrack);
  priceSlider.append(pricePointLeft);
  priceSlider.append(pricePointRight);
  const arrayOfProd: Array<IProduct> = await getProducts();
  const arrayOfPrices: Array<number> = arrayOfProd.map((item) => item.price);
  const minPrice = Math.min(...arrayOfPrices);
  const maxPrice = Math.max(...arrayOfPrices);
  priceFilter.classList.add('filter-price');
  priceInputLeft.type = 'range';
  priceInputLeft.step = `1`;
  priceInputLeft.min = `${minPrice}`;
  priceInputLeft.max = `${maxPrice}`;
  priceInputLeft.value = `${minPrice}`;
  priceInputRight.type = 'range';
  priceInputRight.min = `${minPrice}`;
  priceInputRight.max = `${maxPrice}`;
  priceInputRight.value = `${maxPrice}`;
  priceInputMinValue.textContent = `€${priceInputLeft.value}`;
  priceInputMaxValue.textContent = `€${priceInputRight.value}`;
};

export const setPriceRangeValues = (): void => {
  const priceInputLeft = document.querySelector('.input-price-left') as HTMLInputElement;
  const priceInputRight = document.querySelector('.input-price-right') as HTMLInputElement;
  const priceInputMinValue = document.querySelector('.input-value-min') as HTMLElement;
  const priceInputMaxValue = document.querySelector('.input-value-max') as HTMLElement;
  const pricePointLeft = document.querySelector('.point-left') as HTMLElement;
  const pricePointRight = document.querySelector('.point-right') as HTMLElement;
  const elemPriceCollection = document.getElementsByClassName('product-price') as HTMLCollectionOf<HTMLElement>;
  const priceArr: Array<HTMLElement> = Array.from(elemPriceCollection);
  const arrayOfPrices: Array<number> = priceArr.map((item) => parseInt(item.id));
  const minPrice = Math.min(...arrayOfPrices);
  const maxPrice = Math.max(...arrayOfPrices);
  console.log(arrayOfPrices);
  let min = parseInt(priceInputLeft.min);
  let max = parseInt(priceInputLeft.max);
  priceInputLeft.value = `${minPrice}`;
  priceInputRight.value = `${maxPrice}`;
  priceInputMinValue.textContent = `€${priceInputLeft.value}`;
  priceInputMaxValue.textContent = `€${priceInputRight.value}`;
  priceInputLeft.value = `${Math.min(parseInt(priceInputLeft.value), parseInt(priceInputRight.value) - 1)}`;
  let percentLeft = ((parseInt(priceInputLeft.value) - min) / (max - min)) * 100;
  pricePointLeft.style.left = `${percentLeft}%`;
  priceInputRight.value = `${Math.max(parseInt(priceInputRight.value), parseInt(priceInputLeft.value) + 1)}`;
  let percentRight = ((parseInt(priceInputRight.value) - min) / (max - min)) * 100;
  pricePointRight.style.right = `${100 - percentRight}%`;
}

